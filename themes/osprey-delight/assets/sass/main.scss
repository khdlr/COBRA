{{ $theme := default "" .Site.Params.Theme }}

@import "flexboxgrid-stripped";
// Theme-loading: Prefer theme's SCSS (if found), otherwise use fallback:
{{ range (slice "colors" "fontface" "fontsizing") }}
  {{ if resources.Get (printf "sass/themes/%s/_%s.scss" $theme .) }}
    @import "themes/{{ $theme }}/{{ . }}";
  {{ else }}
    @import "{{ . }}";
  {{ end }}
{{ end }}

@import "icons";
@import "animation";
@import "layout";
@import "base";
@import "modal";
@import "about";
@import "gallery";
{{ if (.Page.Scratch.Get "blog") -}}
@import "blog";
{{- end }}

h1,
h2,
h3 {
  margin-bottom: $vertical-rhythm;
  font-family: $font-header;
  letter-spacing: 2px;
  line-height: 1.45;

  a {
    text-decoration: none;
  }
}

.home-logo {
  max-height: 0;  /* khdlr: Disable Logo */
  margin-bottom: $vertical-rhythm;
}

{{ if .Site.Params.Feat.useTermynal -}}
$term_title: "{{ .Site.Data.terminal.title }}";
@import "termynal";
.term-content {
  max-height: calc(80vh - 20vh);
  overflow-y: auto;
}
{{- end }}

@import "nav";

// TODO(kdevo): only used in 404, refactor!
.full {
  top: 0;
  bottom: 0;
  height: 100vh;
}

@import "contact";


// Background image
{{ if .Site.Params.background -}}
  {{ $imgDict := partial "resizer/responsive" (dict 
    "img" (resources.Get .Site.Params.background)
    "maxsize" (default "1920x" site.Params.Image.Background.resize)
    "lqipsize" (default "512x Gaussian" site.Params.Image.Background.resizeLQIP)
    "responsivesizes" (slice "512x" "640x" "1280x" "1600x" "1920x")
    "resizeoptions" (default "jpg q92" site.Params.Image.Background.resizeOptions)
  ) }}

  .bg {
    background-image: url("{{ $imgDict.lqip.Permalink }}"); 
    background-repeat: no-repeat;
    background-position: center;
    background-attachment: fixed;
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
  }

  {{ range $imgDict.responsive }}
  @media (min-width: {{ math.Round (mul .Width 0.5) }}px) {
      .bg.lazyloaded {
        transition: background-image 1.5s;
        background-image: url("{{ .Permalink }}"), url("{{ $imgDict.lqip.Permalink }}"); 
      }
  }
  {{ end }}
{{ end }}

{{ if resources.Get (printf "sass/themes/%s/_custom.scss" $theme) }}
  @import "themes/{{ $theme }}/custom";
{{ end }}
@import "custom";
